// Datasource
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator
generator client {
  provider = "prisma-client-js"
}

model TestingItem {
  id          String   @id @default(uuid())
  name        String
  description String?
  status      Status   @default(todo)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String?
  owner       User?    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

enum Status {
  todo
  in_progress
  done
}

model User {
  id        String        @id
  email     String        @unique
  name      String?
  password  String?       // For email/password auth
  githubId  String?       @unique // For GitHub OAuth
  createdAt DateTime      @default(now())
  items     TestingItem[]
  audioFiles AudioFile[]
  
  @@index([githubId])
}

model AudioFile {
  id          String      @id @default(uuid())
  title       String
  originalName String
  blobUrl     String      @unique
  blobId      String      @unique
  format      String
  duration    Int?        // in seconds
  fileSize    Int         // in bytes
  status      AudioStatus @default(draft)
  ownerId     String
  owner       User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([status, createdAt])
  @@index([ownerId])
}



enum AudioStatus {
  draft
  published
}


